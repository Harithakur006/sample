/*
cerate a database
*/
CREATE DATABASE TEST123;
-- delete database
DROP DATABASE TEST123;
-- 	all database
SHOW DATABASES;

-- if database not avilabele then create one
CREATE DATABASE IF NOT EXISTS SA2019;
CREATE DATABASE IF NOT EXISTS SA2019;


-- if database is not exist then i would like to create
CREATE DATABASE IF NOT EXISTS SA2024;
-- use of database for data handling
USE SA2024;

-- to check number of table
SHOW TABLES;
===========================
-- DDL (data defination languges)
-- 1.create
-- 3.truncate - delete all rows from the table
-- 4.drop- delete entrier structure

CREATE TABLE STUDENT(STD INT,SNAME VARCHAR(15),ADDS VARCHAR(30));

-- IN oprater matches value 
-- test for loctaion statara anagpur delhi 
SELECT* FROM EMPLOYEE
WHERE ADDR IN ('DELHI',' NAGAPUR',' SATARA');

-- test for loction satara, nagpur,delhi,pune 
SELECT * FROM EMPLOYEE
WHERE ADDR IN ('MUMBAI','PUNE','DELHI' );

-- NOT IN (EXCEPT VALUES )
-- get all the records only for mumbai not for pune 
SELECT * FROM EMPLOYEE
WHERE ADDR NOT IN ('PUEN');

-- LIKE opErater (%) * all char_ single char % 0 or more (WILDCARD OPERATER)
SELECT * FROM EMPLOYEE;
-- get the employeee name whoes start wifth A
SELECT ENAME FROM  EMPLOYEE
WHERE ENAME LIKE 'A%'; 

-- FOR ENDING K
SELECT * FROM EMPLOYEE
WHERE ENAME LIKE '%A';

-- get the addr which is matching 'M_MB_I'
SELECT * FROM EMPLOYEE
WHERE ADDR LIKE 'M_MB_I';

-- get the all records whoes match with 'A_ _ T'
SELECT * FROM EMPLOYEE
WHERE ENAME LIKE 'A__T';

/* -- ORDER BY CLAUSE  used to sort the result 
 ASC- accending order
 desc- decending order
 */
SELECT * FROM EMPLOYEE
ORDER BY ADDR DESC;
-- SORT THE RECORDS IN ACCENDING BASED 
SELECT * FROM EMPLOYEE
ORDER BY SALARY ASC;

-- LIMIT get only firts 5 records from the table 
SELECT * FROM EMPLOYEE; -- ONLY WANT FIVE ORDER 

SELECT * FROM EMPLOYEE
LIMIT 5;

-- get the highest salary 
SELECT * FROM EMPLOYEE
ORDER BY SALARY DESC
LIMIT 1;

SELECT * FROM EMPLOYEE
ORDER BY SALARY ASC
LIMIT 1;

-- LIMIT A,B -A WILL IGNORE AND NEXT B VALUE YOU WILL ABLE TO RETRIVE
-- GET SECOD HIGHST SALARY 
SELECT * FROM EMPLOYEE
ORDER BY SALARY DESC
LIMIT 1,1;
-- get third high salary 
SELECT * FROM EMPLOYEE
ORDER BY SALARY DESC
LIMIT 2,1;

SELECT * FROM EMPLOYEE;

-- LAST FIVE SALARY 
SELECT * FROM EMPLOYEE
LIMIT 2,5;
-- AGGREGATE FUNCTION 
-- to calculate total records  from the table -COUNT 

SELECT count(*) FROM EMPLOYEE;

-- ALISE rename the coloum temporary 
SELECT COUNT(*) AS TOTAL_RECORDS FROM EMPLOYEE;

SELECT * FROM EMPLOEE
ORDER BY SALARY DESC;

SELECT  * FROM EMPLOYEE
WHERE SALARY=90000 OR SALARY=30000;
/*
SQL JOIN 
TABLE WE CAN JOIN

*/
CREATE TABLE EMP(EID INT,ENAME VARCHAR(15),ADDR VARCHAR(30));
CREATE TABLE DEPT(DID INT,dNAME VARCHAR(15),HOD VARCHAR(30));
DESC EMP;
DESC DEPT;
ALTER TABLE EMP
ADD DID INT;
INSERT INTO EMP VALUES(104,'ABHI','KOL',114);
SELECT * FROM  EMP;
INSERT INTO DEPT VALUES(120,'BORD','MR.SPANA');
SELECT * FROM DEPT;

-- INNER JOIN (BASD ON EQUALITY BETWEEN TWO TABLE)
SELECT * FROM emp
INNER JOIN DEPT
ON EMP.DID=DEPT.DID;

-- OUTER JOIN (LEFT AUTER + COMMAN DATA FROM RIGHT TABLE )
SELECT * FROM EMP 
LEFT JOIN DEPT
ON EMP.DID=DEPT.DID;

-- RIGHT OUTER JOIN (RIGHT TABLE + COMMAN FROM LEFT TABLE )
SELECT * FROM emp
RIGHT JOIN DEPT
ON EMP.DID=DEPT.DID;

-- FULL JOIN (NOT WORKING HERE)
SELECT * FROM EMP 
FULL JOIN DEPT
ON EMP.DID=DEPT.DID; -- RIGHT WAY BUT ON SOME MACHINE IS NOT WORKING

-- DIFFRENT METHOD OF FULL JOIN 
SELECT * FROM emp
LEFT JOIN DEPT
ON EMP.DID=DEPT.DID
UNION 
SELECT * FROM EMP 
RIGHT JOIN DEPT
ON EMP.DID=DEPT.DID;

-- CROSS JOIN
SELECT *FROM emp
CROSS JOIN DEPT;

-- SELF JOIN TABLE JOIN ITSELF 
SELECT EMP.EID,E1.ENAME,E1.ENAME,E2.DID
FROM EMP E1,EMP E2
WHERE E1.DID=E2.DID;
