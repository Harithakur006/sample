-- 03/01/2025
-- CONVERT() ONE TYP DATA WE CAN CONVERT INTO ANOTHER TYPE
SELECT CONVERT(90,DECIMAL);
SELECT CONVERT(90,DECIMAL) AS INTODECIMAL;
SELECT CONVERT ('2025-02-20',DATE);
SELECT CONVERT (-90,SIGNED);
SELECT CONVERT (-90,UNSIGNED);

-- MATH FUNCTION
SELECT POW(34,2); -- THIS 2 IS SQUARE OF FIRST NUMBER
SELECT round(56.34); -- WILL GIVE YOU ROUNDFIGURE
SELECT ABS(-78); -- ABS WILL GIVE YOU WITHOUT ANY SIGEND 
SELECT SIGN(-11); -- IF IN NEGATIVE THEN GIVE -1 AND IN POSITIVE GIVE 0
SELECT LEAST(2,3,4,5,6);

-- STRING FUNCTION
SELECT LENGTH("HELLO HARI"); -- GIVE LENGTH
SELECT LOWER("HARI"); -- LOWER CASE
SELECT UPPER('hari'); -- upper case
SELECT CONCAT("WELCOME",'ALL');
SELECT REVERSE('WELCOME');
SELECT LTRIM( ' HARI');
SELECT RTRIM('HARI  ');
-- DATE()
SELECT CURDATE();
SELECT SYSDATE();
SELECT current_date();
SELECT DAY('2025.02.22');
SELECT DAYNAME('2025.02.22');

-- 24-02-2025
USE SA2024;
SELECT * FROM EMPLOYEE;

-- get the total nuber of employee
-- AGGREGATE FUNC
SELECT COUNT(*) FROM EMPLOYEE;
SELECT COUNT(*) AS TOTALEMPLOYEES FROM EMPLOYEE;

-- GET THE FEMALE EMPLOYEE
SELECT COUNT(*)  AS FEMALE_EMP FROM EMPLOYEE
WHERE GENDER ='F';
  
 -- NO. OF MALE 
 SELECT COUNT(*) AS MALE_EMP FROM EMPLOYEE
 WHERE GENDER ='M';
 -- GET THE MINIMUM SALARY 
 SELECT MIN(SALARY) FROM EMPLOYEE;
 -- GET MAX SALARY
 SELECT MAX(SALARY) FROM EMPLOYEE;
 
 -- GET AVG SALARY
 SELECT AVG(SALARY) FROM EMPLOYEE;

-- GET TOTAL SALARY 
SELECT SUM(SALARY) FROM EMPLOYEE;

-- GET MINIMUM SALARY FOR FEMALE EMP.
SELECT MIN(SALARY) AS FEMALE FROM EMPLOYEE
WHERE GENDER='F';
/*

GROUP*/
-- GET THE MIN SALRY AS PER DEP
SELECT MIN(SALARY) FROM EMPLOYEE
WHERE DEPT=' QA';

SELECT DEPT,ENAME,MIN(SALARY) FROM EMPLOYEE
GROUP BY DEPT,ENAME;

-- GET THE FOR FEMALE MIN SALARY AS PER DEPT
/* SELECT
WHERE
GROUP BY
HAVING CLAUSE   -- ALL THIS IS SEQUENCE IN SQL OF CONDITIONS
ORDER BY
LIMIT */

SELECT DEPT,MIN(SALARY) FROM EMPLOYEE
WHERE GENDER='F'
GROUP BY DEPT;

-- 
SELECT DEPT,COUNT(*) FROM EMPLOYEE
GROUP BY DEPT;

-- W.A QUERY TO COUNT NUMBER OF EMPLOYEE AS PER GENDER 
SELECT GENDER,COUNT(*) FROM EMPLOYEE
GROUP BY GENDER; 
-- W.A. QUERY TO COUNT NUMBER OF EMPLOYEE AS PR DEPT AND GENDER
SELECT DEPT,GENDER,COUNT(*) FROM EMPLOYEE
 -- THIS IS A SIMPPLE WAY 

-- query to display min ,max,avg.salary employee
SELECT DEPT,MIN(SALARY),MAX(SALARY),AVG(SALARY) FROM EMPLOYEE
GROUP BY DEPT;

-- query to calculate totalbudget on department
SELECT DEPT,SUM(SALARY) FROM EMPLOYEE
GROUP BY DEPT;

-- QUERY TO GET HIGEST SALARY FOR 2 EMPLOYEE AS PER DEPT 
SELECT DEPT,MAX(SALARY) FROM EMPLOYEE
GROUP BY DEPT
LIMIT 2;
     
-- QUERY TO GET HEIGHSET  2 LAST SALARY AS PR DEPT 
SELECT DEPT,MAX(SALARY) FROM EMPLOYEE
group by DEPT,SALARY
ORDER BY SALARY DESC
LIMIT 1,1;

 
USE SA2024;    
SELECT * FROM EMPLOYEE;
-- GET THE EMPLOYEE AVG SALARY AS DEPT 
SELECT DEPT,AVG(SALARY) FROM EMPLOYEE
GROUP BY DEPT;

-- GET THE AVG SALARY AS PER DEPT AND SALARY SHOUL BE
--  MORE THAN 50K
SELECT DEPT,AVG(SALARY) FROM EMPLOYEE
GROUP BY DEPT
HAVING AVG(SALARY)>50000;
-- HAVING USE WITH ONLY WITH GROUP NO OTHER WAY TO DO USING HAVING
SHOW TABLES;
DESC EMPLOYEE;

-- what is normalitation
/*normalitation in DBMS is a technique which you can qrgnize
 you data in the database tables so that:
 there is less repetition of data
 a large set of data is strucured into a bunch of simillar
table and the table have a proper relationship between them
types---
1.first normal form
2.second normal form
3.third normal form 

*first normal form-
for table to be in the first normal form
-it shoulb only have single (atomic) valued attributes/colum
-value stored in a columns should be of the same domain
-all the colums in a table should have unique name 
-and the order in which data is stored should not matter
*/
-- ADD PRIMARY KEY CONSTRAINT TO EMP TABLE
ALTER TABLE EMPLOYEE
ADD PRIMARY KEY(EID);
DESC EMPLOYEE;
CREATE TABLE PROJECT(PID INT,PNAME VARCHAR(15),EID INT,
PRIMARY KEY(PID),FOREIGN KEY(EID) REFERENCES EMPLOYEE(EID))
select * from project;
desc project;

insert into project values (3,'project3',106);
select * from project;

-- HOW TO JOIN TWO TABLES WITHOUT JOIN --USINIG KEYS IT
SELECT * FROM EMPLOYEE,PROJECT
WHERE EMPLOYEE.EID=PROJECT.EID;

--