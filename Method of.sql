-- CREATE TABLE STUDENT(SID INT,SNAME VARCHAR(15),ADDS varchar(30));
-- confirm created table 
 SHOW TABLES;
DESC STUDENT;

-- TO CRAETE ROW IN A TABLES
INSERT INTO STUDENT VALUE(101,'SURAJ','PUNJAB');
-- DQL -GET THA TABLE DATA
select * FROM STUDENT;
-- ONLY FOR NAME 
SELECT SNAME FROM STUDENT;


-- MULTIPLE ENTERY IN TABLE
INSERT INTO STUDENT(SID,SNAME,ADDS)
values(102,'KIRAN','PUNE'),
       (103,'RAJU','PUNE'),
       (104,'GEETA','MUMBAI'),
       (105,'REETA','DELHI'),
       (102,'KAVITA','NASIK');
       
       -- get all the rows 
       SELECT * FROM STUDENT

 -- for filterning based on conditional any record  we use -where clause  
 WHERE SID=103;
 
 SELECT * FROM STUDENT
 WHERE SID=105;
 -- FOR ADDRESS 105
 SELECT * FROM STUDENT
 WHERE ADDS='PUNE';
 -- ALTER QUIREY
 
 ALTER TABLE STUDENT
 ADD PHNO INT;
 SELECT * FROM STUDENT;
 
 -- to change datatype modify
 ALTER TABLE STUDENT
 MODIFY PHNO LONG;
 
 DESC STUDENT;
 SELECT * FROM STUDENT;
 
 USE SA2024;
 -- SET THE SAFE MADE
 SET SQL_SAFE_UPDATES=0;
 UPDATE STUDENT
 SET PHNO=7878
 WHERE SID=101;
 
 SELECT *FROM STUDENT;
 
 UPDATE STUDENT
 SET PHNO=9292676
 WHERE SNAME='RAJU';
 USE SA2024;
 
 -- DELETE 
 DELETE FROM STUDENT
 WHERE SNAME='SURAJ';
 SELECT * FROM STUDENT;
 
 -- delete colum DDL 
 ALTER TABLE STUDENT
 DROP PHNO;
 SELECT * FROM STUDENT;
 
 --  SQL CONSTRAINTS
 -- NUT NOT ALLOWED
 
 CREATE TABLE EMPLOYEE (EID INT PRIMARY KEY,
                       ENAME VARCHAR(15) NOT NULL,
                       GENDER CHAR(1),
                       PHNO INT UNIQUE,
                       AGE INT CHECK(AGE>=20),
                       DEPT VARCHAR(10) DEFAULT 'TRANING',
                       ADDR VARCHAR(20),
                       SALARY INT);
-- how to description of the table 
DESC EMPLOYEE;
-- insert reccords as per costraint
-- primary key(unique + not null)
INSERT INTO EMPLOYEE-- (EID,ENAME,GENDER,PHNO,AGE,DEPT,ADDR,SALARY)
VALUES(101,'AMIT','M',981190,30,'HR','PUNE',40000);

SELECT * FROM EMPLOYEE;

-- primary key(unique=not null)
INSERT INTO EMPLOYEE
VALUES(102,'SUNITA','F',981191,24,'ENGG','MUMBAI',55000);
   SELECT * FROM EMPLOYEE;                    
INSERT INTO EMPLOYEE
VALUES(103,'ANITA','F',981691,24,'HR','PUNE',30000);
SELECT * FROM EMPLOYEE; 

INSERT INTO EMPLOYEE
VALUES(104,'REKHA','F',981234,24,'DEV','DELHI',60000);
 SELECT * FROM EMPLOYEE;
 
 INSERT INTO EMPLOYEE
VALUES(105,'RAVEENA','F',7507121,21,'QA','BANG',75000);
 SELECT * FROM EMPLOYEE;
 
 
 -- if we skip one of thing default value(IGNORE THAT VALUE)
 INSERT INTO EMPLOYEE
VALUES(106,'KUMAR','M',9823129,29,'ACCOU','HARYA',45000);
DESC EMPLOYEE;
 SELECT* FROM EMPLOYEE;
 
  INSERT INTO EMPLOYEE
VALUES(107,'KAVITA','F',9823098,29,'QA','PUNE',95000);
SELECT*FROM EMPLOYEE;

/*DISTINCT STATMENT 
to
 */
 -- DISTINCT GENDER
 SELECT DISTINCT GENDER FROM EMPLOYEE;
 SELECT*FROM EMPLOYEE;
 
 -- DISTINCT ADDRESS
 SELECT DISTINCT ADDR FROM EMPLOYEE;
 
 -- DISTINCT DEPARTMENT 
 SELECT DISTINCT DEPT FROM EMPLOYEE;
 
 -- greater salary more than 50k
 SELECT*FROM EMPLOYEE 
 WHERE SALARY>50000;
 -- less than 50k
 SELECT*FROM EMPLOYEE 
 WHERE SALARY<50000;
 
 SELECT ENAME FROM EMPLOYEE
 WHERE SALARY=50000;
 
 -- OPRATER
 /*
 AND- TWO CONDITIONS MATCHED 
 ,OR- ANY ONE 
 ,BETWEEN- BEETWEEN TWO OR MULTIPLE DATA
 ,IN - ANYTHING FROM VALUES 
 ,NOT IN - OTHER THAN EXISTING values
 LIMIT - 
 LIKE WITH PATTERN 
 */ 
 -- AND 
 SELECT *FROM EMPLOYEE;
 
 -- GET THE RECORD FROM ALL THE FEMALE FROM PUNE
 SELECT *FROM EMPLOYEE
 WHERE GENDER='F' AND ADDR='PUNE';
 
 -- get all the male from mumbai 
 SELECT * FROM EMPLOYEE
 WHERE GENDER='M' AND ADDR='PUNE';
 

-- OR(IF ONE CINDITION IS TRUE THEN WE WILL GRT THE RESULT)
 SELECT * FROM EMPLOYEE
 WHERE GENDER='M' OR ADDR='MUMBAI';

-- BETWEEN
-- get the record salary range  
SELECT * FROM EMPLOYEE;
 
 SELECT * FROM EMPLOYEE
 WHERE SALARY BETWEEN 50000 AND 1000000;
 
 -- age filter 
 select * from employee
 where AGE BETWEEN 20 AND  28;
 
 
 
 